<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xsi:schemaLocation="
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
   http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    " >
  <bean id="propertiesFactoryBean" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="location">
			  	  <value>classpath:system-init-config.properties</value>
			</property>
		 </bean>
   <context:component-scan base-package="com.sundoctor com.common.base com.service">
   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<bean id="springContextUtil" class="com.common.tool.SpringContextUtil" scope="singleton" />
	
	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>				
			</list>
		</property>
	</bean>
	
	<!-- 缓存文件读入 -->
	<bean id="cacheProperties" class="com.common.tool.PropertiesCache" scope="singleton">
		<property name="locations">
			<list>
				<value>classpath:setting.properties</value>				
			</list>
		</property>
	</bean>
	 
	
	<!-- 数据源定义,使用c3p0 连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	<property name="driverClass" value="${jdbc.driverClassName}" />	
	<property name="jdbcUrl" value="${jdbc.url}" />	
	<property name="user" value="${jdbc.username}" />	
	<property name="password" value="${jdbc.password}" />		
	<property name="initialPoolSize" value="${cpool.minPoolSize}"/>	
	<property name="minPoolSize" value="${cpool.minPoolSize}" />	
	<property name="maxPoolSize" value="${cpool.maxPoolSize}" />	
	<property name="acquireIncrement" value="${cpool.acquireIncrement}" /> 
    <property name="maxIdleTime" value="${cpool.maxIdleTime}"/>   
	</bean>	
	
	<!-- 创建quartz数据库表
	<jdbc:initialize-database data-source="dataSource"
		ignore-failures="ALL">
		<jdbc:script location="classpath:db/tables_h2.sql" />
	</jdbc:initialize-database>
	--> 		
	
	<!-- 使用H2内存数据库并创建quartz数据库表 
    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:db/tables_h2.sql"/>       
    </jdbc:embedded-database>-->	
	
	<!--Hibernate SessionFatory-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>com.sundoctor.example.model</value>
				<value>com.data.collect.model</value>				
			</list>
		</property>	
		<property name="mappingLocations">
			<value>classpath:/query/*.hbm.xml</value>
		</property>
	    <property name="hibernateProperties">
	        <props>
	            <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	            <prop key="hibernate.show_sql">true</prop>
	            <prop key="hibernate.format_sql">true</prop>				
				<prop key="hibernate.hbm2ddl.auto">update</prop>        
	        </props>
	    </property>
	</bean>	
	
	<!--Hibernate TransactionManager-->
	<bean id="transactionManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory"/>
	</bean>		

	<bean id="transactionInterceptor"  
        class="org.springframework.transaction.interceptor.TransactionInterceptor">  
        <property name="transactionManager" ref="transactionManager" />  
        <!-- 配置事务属性 -->  
        <property name="transactionAttributes">  
            <props>  
                <prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="start*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
            </props>  
        </property>  
    </bean>
      
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">  
        <property name="beanNames">  
            <list>  
                <value>*Service</value>
                <value>*ServiceImpl</value>
            </list>  
        </property>  
        <property name="interceptorNames">  
            <list>  
                <value>transactionInterceptor</value>  
            </list>  
        </property>  
    </bean> 

</beans>